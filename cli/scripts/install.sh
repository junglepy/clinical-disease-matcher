#!/bin/bash
set -e

echo "üè• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Clinical Matcher CLI..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CLI_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"
VENV_DIR="$HOME/.clinical-matcher-venv"

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±–æ–ª–æ—á–∫–∏
detect_shell() {
    if [ -n "$BASH_VERSION" ]; then
        echo "bash"
    elif [ -n "$ZSH_VERSION" ]; then
        echo "zsh"
    else
        # Fallback to checking SHELL variable
        case "$SHELL" in
            */bash) echo "bash" ;;
            */zsh) echo "zsh" ;;
            */fish) echo "fish" ;;
            *) echo "unknown" ;;
        esac
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
get_shell_config() {
    local shell_type="$1"
    case "$shell_type" in
        bash)
            if [[ "$OSTYPE" == "darwin"* ]]; then
                echo "$HOME/.bash_profile"
            else
                echo "$HOME/.bashrc"
            fi
            ;;
        zsh)
            echo "$HOME/.zshrc"
            ;;
        fish)
            echo "$HOME/.config/fish/config.fish"
            ;;
        *)
            echo ""
            ;;
    esac
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –æ–±–æ–ª–æ—á–∫—É
CURRENT_SHELL=$(detect_shell)
SHELL_CONFIG=$(get_shell_config "$CURRENT_SHELL")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7 –∏–ª–∏ –≤—ã—à–µ"
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
echo "   –ù–∞–π–¥–µ–Ω Python $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Python
MIN_VERSION="3.7"
if [ "$(printf '%s\n' "$MIN_VERSION" "$PYTHON_VERSION" | sort -V | head -n1)" != "$MIN_VERSION" ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python $MIN_VERSION –∏–ª–∏ –≤—ã—à–µ!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo ""
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ -d "$VENV_DIR" ]; then
    echo "   –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    rm -rf "$VENV_DIR"
fi

python3 -m venv "$VENV_DIR"
echo "   –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ $VENV_DIR"

# –û–±–Ω–æ–≤–ª—è–µ–º pip
echo ""
echo "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
"$VENV_DIR/bin/pip" install --quiet --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç
echo ""
echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd "$CLI_DIR"
"$VENV_DIR/bin/pip" install -e .

# –°–æ–∑–¥–∞–µ–º wrapper —Å–∫—Ä–∏–ø—Ç
echo ""
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞..."
mkdir -p "$HOME/bin"

cat > "$HOME/bin/clinical-matcher" << 'EOF'
#!/bin/bash
# Wrapper –¥–ª—è Clinical Matcher CLI

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –æ–∫—Ä—É–∂–µ–Ω–∏—é
VENV_DIR="$HOME/.clinical-matcher-venv"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "$VENV_DIR" ]; then
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–Ω–æ–≤–æ"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º CLI
exec "$VENV_DIR/bin/python" -m clinical_matcher "$@"
EOF

chmod +x "$HOME/bin/clinical-matcher"
echo "   –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª $HOME/bin/clinical-matcher"

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo ""
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
mkdir -p "$HOME/.config/clinical-matcher"

if [ ! -f "$HOME/.config/clinical-matcher/config.json" ]; then
    cat > "$HOME/.config/clinical-matcher/config.json" << 'EOF'
{
  "api_url": "http://localhost:8002",
  "max_concurrent": 5,
  "timeout": 60
}
EOF
    echo "   –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
else
    echo "   –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PATH
echo ""
if [[ ":$PATH:" == *":$HOME/bin:"* ]]; then
    echo -e "${GREEN}‚úÖ $HOME/bin —É–∂–µ –≤ PATH${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  $HOME/bin –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH${NC}"
    echo ""
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ PATH
    if [ "$CURRENT_SHELL" != "unknown" ] && [ -n "$SHELL_CONFIG" ]; then
        echo -e "${BOLD}–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ–±–æ–ª–æ—á–∫–∞: $CURRENT_SHELL${NC}"
        echo -e "${BOLD}–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $SHELL_CONFIG${NC}"
        echo ""
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ PATH –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±–æ–ª–æ—á–∫–∏
        if [ "$CURRENT_SHELL" == "fish" ]; then
            PATH_CMD="set -gx PATH \$HOME/bin \$PATH"
        else
            PATH_CMD='export PATH="$HOME/bin:$PATH"'
        fi
        
        echo "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ PATH:"
        echo ""
        echo "1) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ $SHELL_CONFIG (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
        echo "2) –î–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é"
        echo "3) –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å)"
        echo ""
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç [1-3]: " choice
        
        case $choice in
            1)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ
                if grep -q "\$HOME/bin" "$SHELL_CONFIG" 2>/dev/null; then
                    echo -e "${YELLOW}PATH —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ $SHELL_CONFIG${NC}"
                else
                    echo "" >> "$SHELL_CONFIG"
                    echo "# Clinical Matcher CLI" >> "$SHELL_CONFIG"
                    echo "$PATH_CMD" >> "$SHELL_CONFIG"
                    echo -e "${GREEN}‚úÖ PATH –¥–æ–±–∞–≤–ª–µ–Ω –≤ $SHELL_CONFIG${NC}"
                    echo -e "${YELLOW}   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
                    echo -e "${BLUE}   source $SHELL_CONFIG${NC}"
                fi
                ;;
            2)
                echo ""
                echo "–î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É –≤ $SHELL_CONFIG:"
                echo -e "${BLUE}$PATH_CMD${NC}"
                echo ""
                echo "–ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
                echo -e "${BLUE}source $SHELL_CONFIG${NC}"
                ;;
            3)
                echo ""
                echo -e "${YELLOW}–í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —á–µ—Ä–µ–∑ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å:${NC}"
                echo -e "${BLUE}$HOME/bin/clinical-matcher${NC}"
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞.${NC}"
                ;;
        esac
    else
        echo "–î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–∞—à–µ–π –æ–±–æ–ª–æ—á–∫–∏:"
        echo -e "${BLUE}export PATH=\"\$HOME/bin:\$PATH\"${NC}"
        echo ""
        echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å:"
        echo -e "${BLUE}$HOME/bin/clinical-matcher${NC}"
    fi
fi

echo ""
echo -e "${GREEN}${BOLD}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
if command -v clinical-matcher &> /dev/null; then
    echo -e "${GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ clinical-matcher –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    CMD_PREFIX=""
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞:${NC}"
    CMD_PREFIX="$HOME/bin/"
fi

echo ""
echo -e "${BOLD}üìò –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher --help${NC}              # –°–ø—Ä–∞–≤–∫–∞"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher configure${NC}           # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher process —Ñ–∞–π–ª.xlsx${NC}   # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher test${NC}                # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
echo ""
echo -e "${BOLD}üîß –ü–µ—Ä–≤—ã–π —à–∞–≥ - –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API —Å–µ—Ä–≤–µ—Ä:${NC}"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher configure --api-url http://your-server:8002${NC}"
echo ""
echo -e "${BOLD}üìñ –ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤:${NC}"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher process diagnoses.xlsx${NC}"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher process --output-dir results/ file1.csv file2.xlsx${NC}"
echo -e "  ${BLUE}${CMD_PREFIX}clinical-matcher test-columns data.xlsx${NC}  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤"